<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIp9
        YT+KfWGZin1hmYp9YZmKfWGZin1hmYt+YJiLgGMsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAi31gpYt9YP+LfWD/i31g/4t9YP+LfWD/i31g/4t+YIIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACKfWC8i31g/4t9YP+LfWD/i31g/4t9YP+LfWD/in1hmQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIt8X9OLfWD/i31g/4t9YP+LfWD/i31g/4t9YP+LfWCwAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACNe2A4in1fOwAAAAAAAAAAAAAAAAAAAACGeWEVi31g7Yt9YP+LfWD/i31g/4t9YP+LfWD/i31g/4t8
        X9OJdmINAAAAAAAAAAAAAAAAgICAAox+YUeIfV8rAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAhnlhFYt9YO+LfWD/i35fy4t9YFqSgFsOi35giIt9YPaLfWD/i31g/4t9YP+LfWD/i31g/4t9
        YP+LfWD/i31g/4t9YO+KfWF0koBbDop8YWmLfWDYi31g/4t9YNqAgFUGAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACKfWGZi31g/4t9YP+LfWD/i31g/4t9X/uLfWD/i31g/4t9YP+CdVr/d2tT/3Nn
        T/9zZ0//eGxS/4J2Wv+LfWD/i31g/4t9YP+LfV/7i31g/4t9YP+LfWD/i31g/4p9X3YAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAjX1eMYt9YPyLfWD/i31g/4t9YP+LfWD/i31g/4t9YP+BdFr/bGBK/2Ra
        Rf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2thSv+CdFn/i31g/4t9YP+LfWD/i31g/4t9YP+LfWD/i31g8YqA
        YBgAAAAAAAAAAAAAAAAAAAAAAAAAAP8AAAGLfWDCi31g/4t9YP+LfWD/i31g/4t9YP+LfWD/e29U/2Va
        Rf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RbRv97b1X/i31g/4t9YP+LfWD/i31g/4t9
        YP+LfWD/jH1gnwAAAAAAAAAAAAAAAAAAAAAAAAAAi31fVot9YP+LfWD/i31g/4t9YP+LfWD/i31g/35y
        WP9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9/clj/i31g/4t9
        YP+LfWD/i31g/4t9YP+LfWD9iXtiNAAAAAAAAAAAAAAAAAAAAACMfGBvi31g/4t9YP+LfWD/i31g/4t9
        YP+Je17/aF1H/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2le
        SP+KfF//i31g/4t9YP+LfWD/i31g/4t9YP6NfF9OAAAAAAAAAAAAAAAAAAAAAAAAAACKfmBVi31f64t9
        YP+LfWD/i31g/3luVP9kWkX/ZFpF/2RaRf9kWkX/ZFpF72NbRmJjVUcSY1VHEmNZRWRkWkXwZFpF/2Ra
        Rf9kWkX/ZFpF/3puVP+LfWD/i31g/4t9YP+LfWDui35gTQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACKgGAYjH1fs4t9YP+LfWD/bWJL/2RaRf9kWkX/ZFpF/2RaRf5iW0VGAAAAAAAAAAAAAAAAAAAAAGVb
        RklkWkX/ZFpF/2RaRf9kWkX/bmJL/4t9YP+LfWD/i31gzIeAYCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACJfl5Bi31g/4t9YP9nXUj/ZFpF/2RaRf9kWkX/ZFlF0wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGVaRdVkWkX/ZFpF/2RaRf9nXUf/i31g/4t9YP+MfF9zAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIt+YU+LfWD/i31g/2VbRv9kWkX/ZFpF/2RaRf9kWkW4AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAZVpFuWRaRf9kWkX/ZFpF/2VbRv+LfWD/i31g/4p9YYEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAi3xgQIt9YP+LfWD/aV5I/2RaRf9kWkX/ZFpF/2Rb
        RudmZjMFAAAAAAAAAAAAAAAAAAAAAFVVVQZkWkXpZFpF/2RaRf9kWkX/aV5J/4t9YP+LfWD/i31gcgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIt8YECLfWDii31g/4t9YP9xZU7/ZFpF/2Ra
        Rf9kWkX/ZFpF/2RbRocAAAAAAAAAAAAAAAAAAAAAZVlFiWRaRf9kWkX/ZFpF/2RaRf9xZk7/i31g/4t9
        YP+LfV/zin1gYgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJlmZgWMfWCHi31g/Yt9YP+LfWD/i31g/39y
        WP9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RbRrdjWUVnY1lFZ2VaRblkWkX/ZFpF/2RaRf9kWkX/ZFpF/39z
        WP+LfWD/i31g/4t9YP+LfWD/i31fq46AYxIAAAAAAAAAAAAAAAAAAAAAjH1fZot9YP+LfWD/i31g/4t9
        YP+LfWD/in1g/2xhSv9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2Ra
        Rf9sYUr/in1g/4t9YP+LfWD/i31g/4t9YP+LfWD/i35gmAAAAAAAAAAAAAAAAAAAAACJgGIai31f84t9
        YP+LfWD/i31g/4t9YP+LfWD/hnhc/2ddR/9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2Ra
        Rf9kWkX/Z11H/4V4XP+LfWD/i31g/4t9YP+LfWD/i31g/4t9YP6Me18+AAAAAAAAAAAAAAAAAAAAAAAA
        AACKfWB4i31g/4t9YP+LfWD/i31g/4t9YP+LfWD/hXdc/2lfSf9kWkX/ZFpF/2RaRf9kWkX/ZFpF/2Ra
        Rf9kWkX/ZFpF/2pfSf+FeFz/i31g/4t9YP+LfWD/i31g/4t9YP+LfWD/i31gpQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAICAZgqLfWDii31g/4t9YP+LfWD/i31g/4t9YP+LfWD/iXxf/3hsU/9pXkj/ZFpF/2Ra
        Rf9kWkX/ZFpF/2heSP94bFP/iXxf/4t9YP+LfWD/i31g/4t9YP+LfWD/i31g/4t9YPaHgGAgAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIt+YU+LfWD/i31g/4t9YP+LfWD5jH1fs4t9YPeLfWD/i31g/4p9
        YP+Ed1v/gXRa/4F0Wv+Fd1z/i31g/4t9YP+LfWD/i31g/Ix9X7OLfWD0i31g/4t9YP+LfWD/i3xgdQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIt9YLiLfV/rin1ghYmAYhoAAAAAjIBgKIt9
        YKeLfV/7i31g/4t9YP+LfWD/i31g/4t9YP+LfWD/i31g/ot9YLSMfWA1AAAAAId4WhGKfV92i31g4ot9
        YNWAgFUGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmWZmBYCAVQYAAAAAAAAAAAAA
        AAAAAAAAAAAAAIt9YMCLfWD/i31g/4t9YP+LfWD/i31g/4t9YP+LfWDhAAAAAAAAAAAAAAAAAAAAAAAA
        AACqVVUDiXZiDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAjH1gqot9YP+LfWD/i31g/4t9YP+LfWD/i31g/4t9YMwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACLfV+Ti31g/4t9YP+LfWD/i31g/4t9YP+LfWD/i31gtQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIt8YHeLfWD/i31g/4t9YP+LfWD/i31g/4t9
        YP+LfmCYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgIBmCol+XkGLfGJEi3xiRIt8
        YkSLfGJEjX5fQ4+AYBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////4H///8A////AP///wD///8A//+MAHH/AAAB/wAAAP4AAAB+AA
        AAfgAAAH8APAD/gH4B/8B+A//AfgH/wH4D/4A8Af4AGAB+AAAAPgAAAH8AAAB/AAAA/4AAAf+OAHn//w
        D///8A////AP///4D/////////////////8=
</value>
  </data>
</root>